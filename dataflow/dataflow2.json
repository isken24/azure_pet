{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceTable",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "SalesByMonth"
				},
				{
					"name": "OriginalData"
				},
				{
					"name": "SalesByYear"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          FirstFlrSF as string,",
				"          SecondFlrSF as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          ThreeSsnPorch as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          Id,",
				"          MonthSold = MoSold,",
				"          YearSold = YrSold,",
				"          SalePrice",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(MonthSold),",
				"     NumberOfSalesByMonth = count(),",
				"          TotalSalesByMonth = sum(toInteger(SalePrice))) ~> SalesByMonth",
				"select1 select(mapColumn(",
				"          Id,",
				"          MonthSold,",
				"          YearSold,",
				"          SalePrice",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OriginalData",
				"select1 aggregate(groupBy(YearSold),",
				"     NumberOfSalesByYear = count(),",
				"          TotalSalesByYear = sum(toInteger(SalePrice))) ~> SalesByYear",
				"OriginalData, SalesByYear join(OriginalData@YearSold == SalesByYear@YearSold,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, SalesByMonth join(OriginalData@MonthSold == SalesByMonth@MonthSold,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          Id,",
				"          MonthSold = OriginalData@MonthSold,",
				"          YearSold = OriginalData@YearSold,",
				"          SalePrice,",
				"          NumberOfSalesByMonth,",
				"          NumberOfSalesByYear,",
				"          TotalSalesByMonth,",
				"          TotalSalesByYear",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive() ~> derivedColumn1"
			]
		}
	}
}